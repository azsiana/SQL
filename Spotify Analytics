# For this project, I downloaded Spotify data from Kaggle 
#I then created a Table and added the Spotify data to it 
# Lastly, I performed analytics on the data using SQLite

#Here's the query I used to create the table

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

##Then, I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL.

/*who are the top 10 artists based on popularity?*/

SELECT artist_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity desc 
LIMIT 10;

/* which songs should be considered for a dance playlist, based on danceabilty and energy?*/

SELECT track_name, artist_name, danceability, energy
FROM BIT_DB.Spotifydata
WHERE danceability >=0.7 
AND energy >=0.6
ORDER BY danceability desc
LIMIT 20;

/* WHich artists produced the most energetic songs?*/
SELECT artist_name
FROM BIT_DB.Spotifydata
ORDER BY energy desc 
LIMIT 15;

/* Who has the shortest song on Spotify?*/
SELECT artist_name, duration_ms
FROM BIT_DB.Spotifydata
ORDER BY duration_ms ASC
LIMIT 1;
